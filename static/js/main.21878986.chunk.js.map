{"version":3,"sources":["images/close.svg","components/GalleryGrid.jsx","components/CSSBox.jsx","components/HTMLBox.jsx","components/GridForm.jsx","components/Alert.jsx","images/logo.svg","components/Appbar.jsx","App.js","index.js"],"names":["Grid","WidthProvider","GridLayout","Container","styled","div","gridStyle","css","GridItem","GalleryGrid","layout","cols","gridWidthPercentage","imageHeight","onLayoutChange","removeItem","useState","gridRowHeight","setGridRowHeight","gridRef","useRef","useEffect","newGridRowHeight","current","window","innerWidth","offsetWidth","console","log","offsetHeight","gridItems","map","item","index","key","i","data-grid","x","y","w","h","src","closeIcon","alt","onClick","newLayout","JSON","parse","stringify","ref","className","rowHeight","compactType","currentLayout","margin","containerPadding","resizeHandles","useCSSTransforms","Header","Pre","pre","CopyButton","button","CSSBox","onCopyText","cssString","forEach","layoutToCSS","style","fontWeight","type","e","preventDefault","tempText","document","createElement","value","body","appendChild","select","execCommand","removeChild","copyToClipboard","whiteSpace","HTMLBox","codeEl","html","htmlString","layoutToHTML","Form","InputGroup","props","tooltip","AddButton","CodeContainer","GridForm","imageNumber","onAddImage","onChangeCols","onChangeGridWidth","onChangeImageHeight","tempCols","setTempCols","tempImageHeight","setTempImageHeight","tempWidthPercentage","setTempWidthPercentage","htmlFor","max","min","id","onKeyDown","event","keyCode","target","blur","onChange","parseInt","onBlur","Alert","message","duration","isShowing","setIsShowing","timeout","clearInterval","setTimeout","defaultStyle","transition","bottom","transitionStyles","entering","entered","exiting","exited","Transition","in","state","header","Appbar","href","logo","Wrapper","containerStyle","display","gridTemplateColumns","gridGap","gridAutoRows","justifyContent","width","padding","overflow","App","setLayout","newCounter","setNewCounter","setCols","setGridWidthPercentage","setImageHeight","alertMessage","setAlertMessage","itemIndexToRemove","findIndex","splice","newItem","length","Math","apply","o","push","prev","newCols","newGridWidth","newHeight","msg","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21878986.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/close.5b8ae0fa.svg\";","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx, css } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useRef, useEffect, useState } from \"react\";\r\nimport GridLayout, { WidthProvider } from \"react-grid-layout\";\r\n\r\nimport \"react-grid-layout/css/styles.css\";\r\nimport \"react-resizable/css/styles.css\";\r\n\r\nimport closeIcon from \"../images/close.svg\";\r\n\r\nconst Grid = WidthProvider(GridLayout);\r\n\r\nconst GalleryGrid = ({\r\n\tlayout,\r\n\tcols,\r\n\tgridWidthPercentage,\r\n\timageHeight,\r\n\tonLayoutChange,\r\n\tremoveItem,\r\n}) => {\r\n\tconst [gridRowHeight, setGridRowHeight] = useState(100);\r\n\r\n\tconst gridRef = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet newGridRowHeight = gridRef.current\r\n\t\t\t? ((window.innerWidth / gridRef.current.offsetWidth / cols) *\r\n\t\t\t\t\timageHeight) /\r\n\t\t\t  (gridWidthPercentage / 100)\r\n\t\t\t: 20;\r\n\t\tsetGridRowHeight(newGridRowHeight);\r\n\t\tconsole.log(\"Changed\");\r\n\t\tconsole.log(gridRef.current.offsetHeight);\r\n\t}, [gridRef.current, cols, imageHeight, gridWidthPercentage]);\r\n\r\n\tconst gridItems = layout.map((item, index) => (\r\n\t\t<GridItem\r\n\t\t\tkey={item.i}\r\n\t\t\tdata-grid={{\r\n\t\t\t\tx: item.x,\r\n\t\t\t\ty: item.y,\r\n\t\t\t\tw: item.w,\r\n\t\t\t\th: item.h,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<img\r\n\t\t\t\tsrc={closeIcon}\r\n\t\t\t\talt=\"\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tremoveItem(item.i);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<span>{index + 1}</span>\r\n\t\t</GridItem>\r\n\t));\r\n\r\n\tlet newLayout = JSON.parse(JSON.stringify(layout));\r\n\r\n\treturn (\r\n\t\t<Container ref={gridRef}>\r\n\t\t\t<Grid\r\n\t\t\t\tclassName=\"layout\"\r\n\t\t\t\tcss={gridStyle}\r\n\t\t\t\tcols={cols}\r\n\t\t\t\trowHeight={gridRowHeight}\r\n\t\t\t\tlayout={newLayout}\r\n\t\t\t\tcompactType={\"vertical\"}\r\n\t\t\t\tonLayoutChange={(currentLayout) => {\r\n\t\t\t\t\tonLayoutChange(currentLayout);\r\n\t\t\t\t}}\r\n\t\t\t\tmargin={[10, 10]}\r\n\t\t\t\tcontainerPadding={[0, 0]}\r\n\t\t\t\tresizeHandles={[\"s\", \"e\"]}\r\n\t\t\t\tuseCSSTransforms={false}\r\n\t\t\t>\r\n\t\t\t\t{gridItems}\r\n\t\t\t</Grid>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nconst Container = styled.div`\r\n\toverflow-y: auto;\r\n\toverflow-x: hidden;\r\n\tbox-shadow: 0px 8px 16px rgba(0, 0, 0, 0.15);\r\n\tbackground-color: #fff;\r\n\tpadding: 15px;\r\n\tpadding-right: 25px;\r\n\r\n\t::-webkit-scrollbar {\r\n\t\twidth: 14px;\r\n\t}\r\n\t::-webkit-scrollbar-thumb {\r\n\t\theight: 6px;\r\n\t\tborder: 4px solid rgba(0, 0, 0, 0);\r\n\t\tbackground-clip: padding-box;\r\n\t\tborder-radius: 7px;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.25);\r\n\t\tbox-shadow: inset -1px -1px 0px rgba(0, 0, 0, 0.05),\r\n\t\t\tinset 1px 1px 0px rgba(0, 0, 0, 0.05);\r\n\t}\r\n\t::-webkit-scrollbar-button {\r\n\t\twidth: 0;\r\n\t\theight: 0;\r\n\t\tdisplay: none;\r\n\t}\r\n`;\r\n\r\nconst gridStyle = css`\r\n\tbackground-color: #fff;\r\n`;\r\n\r\nconst GridItem = styled.div`\r\n\tdisplay: grid;\r\n\tplace-items: center;\r\n\tbackground-color: #40caee;\r\n\r\n\timg {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\ttop: 5px;\r\n\t\tright: 5px;\r\n\t\twidth: 16px;\r\n\t\theight: 16px;\r\n\t\tobject-fit: cover;\r\n\t\tcursor: pointer;\r\n\t\tpointer-events: all;\r\n\t}\r\n\r\n\tspan {\r\n\t\tcolor: #f4f4f4;\r\n\t\tfont-weight: 900;\r\n\t\tfont-size: 2.4rem;\r\n\t\tuser-select: none;\r\n\t}\r\n`;\r\n\r\nexport default GalleryGrid;\r\n","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst CSSBox = ({ layout, onCopyText, gridWidthPercentage, imageHeight }) => {\r\n\tconst layoutToCSS = () => {\r\n\t\tlet cssString = `.grid-gallery {\r\n  display: grid;\r\n  grid-gap: 10px;\r\n  grid-auto-rows: ${imageHeight}px;\r\n  width: ${gridWidthPercentage}%;\r\n}\r\n`;\r\n\r\n\t\tlayout.forEach((item, index) => {\r\n\t\t\tcssString += `\r\n.grid-gallery img:nth-child(${index + 1}) {\r\n  grid-column: ${item.x + 1} / span ${item.w};\r\n  grid-row: ${item.y + 1} / span ${item.h};\r\n}\r\n`;\r\n\t\t});\r\n\r\n\t\treturn cssString;\r\n\t};\r\n\r\n\tconst copyToClipboard = () => {\r\n\t\tvar tempText = document.createElement(\"textarea\");\r\n\t\ttempText.value = css;\r\n\t\tdocument.body.appendChild(tempText);\r\n\t\ttempText.select();\r\n\r\n\t\tdocument.execCommand(\"copy\");\r\n\t\tdocument.body.removeChild(tempText);\r\n\r\n\t\tonCopyText(\"CSS copied to clipboard\");\r\n\t};\r\n\r\n\tlet css = layoutToCSS();\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Header>\r\n\t\t\t\t<p style={{ fontWeight: \"900\" }}>CSS</p>\r\n\t\t\t\t<CopyButton\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tcopyToClipboard();\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tCopy\r\n\t\t\t\t</CopyButton>\r\n\t\t\t</Header>\r\n\t\t\t<Pre>\r\n\t\t\t\t<code style={{ whiteSpace: \"none\" }}>{css}</code>\r\n\t\t\t</Pre>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\toverflow: hidden;\r\n`;\r\n\r\nconst Header = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tmargin-bottom: 10px;\r\n\tpadding-left: 15px;\r\n`;\r\n\r\nconst Pre = styled.pre`\r\n\tdisplay: inline-block;\r\n\tpadding: 15px;\r\n\tbackground-color: #fff;\r\n\toverflow: auto;\r\n\tborder-radius: 10px;\r\n`;\r\n\r\nconst CopyButton = styled.button`\r\n\tbackground-color: #555;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\tpadding: 8px 10px;\r\n\tborder-radius: 5px;\r\n`;\r\n\r\nexport default CSSBox;\r\n","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useRef } from \"react\";\r\n\r\nconst HTMLBox = ({ layout, onCopyText }) => {\r\n\tconst codeEl = useRef(null);\r\n\r\n\tconst layoutToHTML = () => {\r\n\t\tlet htmlString = `<div class=\"grid-gallery\">\r\n`;\r\n\r\n\t\tlayout.forEach((item) => {\r\n\t\t\thtmlString += `  <img src=\"\" alt=\"\" />\r\n`;\r\n\t\t});\r\n\r\n\t\thtmlString += `</div>`;\r\n\r\n\t\treturn htmlString;\r\n\t};\r\n\r\n\tconst copyToClipboard = () => {\r\n\t\tvar tempText = document.createElement(\"textarea\");\r\n\t\ttempText.value = html;\r\n\t\tdocument.body.appendChild(tempText);\r\n\t\ttempText.select();\r\n\r\n\t\tdocument.execCommand(\"copy\");\r\n\t\tdocument.body.removeChild(tempText);\r\n\r\n\t\tonCopyText(\"HTML copied to clipboard\");\r\n\t};\r\n\r\n\tlet html = layoutToHTML();\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Header>\r\n\t\t\t\t<p style={{ fontWeight: \"900\" }}>HTML</p>\r\n\t\t\t\t<CopyButton\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tcopyToClipboard();\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tCopy\r\n\t\t\t\t</CopyButton>\r\n\t\t\t</Header>\r\n\t\t\t<Pre>\r\n\t\t\t\t<code style={{ whiteSpace: \"none\" }} ref={codeEl}>\r\n\t\t\t\t\t{html}\r\n\t\t\t\t</code>\r\n\t\t\t</Pre>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\toverflow: hidden;\r\n`;\r\n\r\nconst Header = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tmargin-bottom: 10px;\r\n\tpadding-left: 15px;\r\n`;\r\n\r\nconst Pre = styled.pre`\r\n\tdisplay: inline-block;\r\n\tpadding: 15px;\r\n\tbackground-color: #fff;\r\n\toverflow: auto;\r\n\tborder-radius: 10px;\r\n`;\r\n\r\nconst CopyButton = styled.button`\r\n\tbackground-color: #555;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\tpadding: 8px 10px;\r\n\tborder-radius: 5px;\r\n`;\r\n\r\nexport default HTMLBox;\r\n","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport CSSBox from \"./CSSBox\";\r\nimport HTMLBox from \"./HTMLBox\";\r\n\r\nconst GridForm = ({\r\n\tlayout,\r\n\timageNumber,\r\n\tcols,\r\n\tgridWidthPercentage,\r\n\timageHeight,\r\n\tonAddImage,\r\n\tonChangeCols,\r\n\tonChangeGridWidth,\r\n\tonChangeImageHeight,\r\n\tonCopyText,\r\n}) => {\r\n\tconst [tempCols, setTempCols] = useState(cols);\r\n\tconst [tempImageHeight, setTempImageHeight] = useState(imageHeight);\r\n\tconst [tempWidthPercentage, setTempWidthPercentage] =\r\n\t\tuseState(gridWidthPercentage);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTempCols(cols);\r\n\t}, [cols]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTempImageHeight(imageHeight);\r\n\t}, [imageHeight]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\r\n\t\t\t\"USEEFFECT - Setting temp grid width to \" + gridWidthPercentage\r\n\t\t);\r\n\t\tsetTempWidthPercentage(gridWidthPercentage);\r\n\t}, [gridWidthPercentage]);\r\n\r\n\treturn (\r\n\t\t<Form>\r\n\t\t\t<AddButton\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tonAddImage();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t+ Add image\r\n\t\t\t</AddButton>\r\n\r\n\t\t\t<InputGroup tooltip={\"Between 2 and 12\"}>\r\n\t\t\t\t<label htmlFor=\"cols\">How many columns?</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tmax=\"12\"\r\n\t\t\t\t\tmin=\"2\"\r\n\t\t\t\t\tvalue={tempCols}\r\n\t\t\t\t\tid=\"cols\"\r\n\t\t\t\t\tonKeyDown={(event) => {\r\n\t\t\t\t\t\tif (event.keyCode == 13) event.target.blur();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonChange={(event) => setTempCols(parseInt(event.target.value))}\r\n\t\t\t\t\tonBlur={(event) => {\r\n\t\t\t\t\t\tif (!event.target.value) {\r\n\t\t\t\t\t\t\tsetTempCols(cols);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonChangeCols(tempCols);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</InputGroup>\r\n\r\n\t\t\t<InputGroup>\r\n\t\t\t\t<label htmlFor=\"gridWidth\">Grid width % (1 - 100)</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tmax=\"100\"\r\n\t\t\t\t\tmin=\"1\"\r\n\t\t\t\t\tvalue={tempWidthPercentage}\r\n\t\t\t\t\tid=\"gridWidth\"\r\n\t\t\t\t\tonKeyDown={(event) => {\r\n\t\t\t\t\t\tif (event.keyCode == 13) event.target.blur();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\tsetTempWidthPercentage(parseInt(event.target.value));\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonBlur={(event) => {\r\n\t\t\t\t\t\tif (!event.target.value) {\r\n\t\t\t\t\t\t\tsetTempWidthPercentage(gridWidthPercentage);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsetTempWidthPercentage(gridWidthPercentage);\r\n\t\t\t\t\t\tonChangeGridWidth(tempWidthPercentage);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</InputGroup>\r\n\r\n\t\t\t<InputGroup>\r\n\t\t\t\t<label htmlFor=\"imageHeight\">Image height (px)</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tmin=\"50\"\r\n\t\t\t\t\tvalue={tempImageHeight}\r\n\t\t\t\t\tid=\"imageHeight\"\r\n\t\t\t\t\tonKeyDown={(event) => {\r\n\t\t\t\t\t\tif (event.keyCode == 13) event.target.blur();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonChange={(event) => setTempImageHeight(parseInt(event.target.value))}\r\n\t\t\t\t\tonBlur={(event) => {\r\n\t\t\t\t\t\tif (!event.target.value) {\r\n\t\t\t\t\t\t\tsetTempImageHeight(imageHeight);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonChangeImageHeight(tempImageHeight);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</InputGroup>\r\n\r\n\t\t\t<CodeContainer>\r\n\t\t\t\t<HTMLBox\r\n\t\t\t\t\tlayout={layout}\r\n\t\t\t\t\tonCopyText={onCopyText}\r\n\t\t\t\t\tgridWidthPercentage={gridWidthPercentage}\r\n\t\t\t\t\timageHeight={imageHeight}\r\n\t\t\t\t/>\r\n\t\t\t\t<CSSBox\r\n\t\t\t\t\tlayout={layout}\r\n\t\t\t\t\tonCopyText={onCopyText}\r\n\t\t\t\t\tgridWidthPercentage={gridWidthPercentage}\r\n\t\t\t\t\timageHeight={imageHeight}\r\n\t\t\t\t/>\r\n\t\t\t</CodeContainer>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nconst Form = styled.div`\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: flex-start;\r\n\trow-gap: 20px;\r\n\tfont-weight: 600;\r\n\r\n\tinput {\r\n\t\tpadding: 5px;\r\n\t\tfont-size: 1rem;\r\n\t\tborder-radius: 5px;\r\n\t\tborder: 1px solid #555;\r\n\t}\r\n\r\n\tinput:focus {\r\n\t\toutline: none;\r\n\t\tborder-color: #ff7abc;\r\n\t}\r\n`;\r\n\r\nconst InputGroup = styled.div`\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tcolumn-gap: 15px;\r\n\r\n\t:hover {\r\n\t\t::before {\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n\r\n\t::before {\r\n\t\tcontent: ${(props) => props.tooltip};\r\n\t\tdisplay: inline-block;\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\ttop: -10px;\r\n\t\ttransform: translateY(-100%);\r\n\t\tpadding: 10px 20px;\r\n\t\tbackground-color: #fff;\r\n\t\topacity: 0;\r\n\t\ttransition: opacity 0.3s ease;\r\n\t\tz-index: 5;\r\n\t}\r\n`;\r\n\r\nconst AddButton = styled.button`\r\n\tpadding: 10px 35px;\r\n\tbackground-color: #ff7abc;\r\n\tcolor: #fff;\r\n\tfont-weight: 600;\r\n\tfont-size: 1rem;\r\n`;\r\n\r\nconst CodeContainer = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr;\r\n\trow-gap: 20px;\r\n\toverflow: hidden;\r\n\twidth: 100%;\r\n`;\r\n\r\nexport default GridForm;\r\n","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx, keyframes, css } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { Transition } from \"react-transition-group\";\r\n\r\nimport \"../index.css\";\r\n\r\nconst Alert = ({ message, duration }) => {\r\n\tconst [isShowing, setIsShowing] = useState(false);\r\n\r\n\tlet timeout = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (message !== \"\") {\r\n\t\t\tclearInterval(timeout.current);\r\n\t\t\tsetIsShowing(true);\r\n\t\t\ttimeout.current = setTimeout(() => {\r\n\t\t\t\tsetIsShowing(false);\r\n\t\t\t}, duration);\r\n\t\t}\r\n\t}, [message]);\r\n\r\n\tconst Container = styled.div`\r\n\t\tposition: fixed;\r\n\t\tleft: 50%;\r\n\t\t//bottom: 100px;\r\n\t\ttransform: translate(-50%, 100%);\r\n\t\tpadding: 8px 35px;\r\n\t\tbackground-color: #ff7abc;\r\n\t\tcolor: #fff;\r\n\t\tborder-radius: 100px;\r\n\t\tbox-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n\t`;\r\n\r\n\tconst defaultStyle = {\r\n\t\ttransition: `all ${200}ms ease`,\r\n\t\tbottom: 0,\r\n\t};\r\n\r\n\tconst transitionStyles = {\r\n\t\tentering: { bottom: \"0px\" },\r\n\t\tentered: { bottom: \"70px\" },\r\n\t\texiting: { bottom: \"70px\" },\r\n\t\texited: { bottom: 0 },\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Transition in={isShowing} timeout={50}>\r\n\t\t\t{(state) => (\r\n\t\t\t\t<Container style={{ ...defaultStyle, ...transitionStyles[state] }}>\r\n\t\t\t\t\t<span>{message}</span>\r\n\t\t\t\t</Container>\r\n\t\t\t)}\r\n\t\t</Transition>\r\n\t);\r\n};\r\n\r\nexport default Alert;\r\n","export default __webpack_public_path__ + \"static/media/logo.11c0104e.svg\";","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport logo from \"../images/logo.svg\";\r\n\r\nconst Appbar = () => {\r\n\treturn (\r\n\t\t<Header>\r\n\t\t\t<a href=\"/\">\r\n\t\t\t\t<img src={logo} alt=\"grid gallery maker\" />\r\n\t\t\t</a>\r\n\t\t</Header>\r\n\t);\r\n};\r\n\r\nconst Header = styled.header`\r\n\ttext-align: center;\r\n\theight: fit-content;\r\n\r\n\timg {\r\n\t\tdisplay: inline-block;\r\n\t\theight: 55px;\r\n\t\tpadding: 10px 20px;\r\n\t\tobject-fit: cover;\r\n\t\tbackground-color: #fff;\r\n\t\tborder-radius: 0 0 10px 10px;\r\n\t\tbox-shadow: 0px 4px 8px rgba(0, 0, 0, 0.15);\r\n\t}\r\n`;\r\n\r\nexport default Appbar;\r\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { useState, useEffect } from \"react\";\nimport GalleryGrid from \"./components/GalleryGrid\";\nimport GridForm from \"./components/GridForm\";\nimport Alert from \"./components/Alert\";\nimport Appbar from \"./components/Appbar\";\n\nfunction App() {\n\tconst [layout, setLayout] = useState([\n\t\t{ i: \"1\", x: 0, y: 0, w: 1, h: 1 },\n\t\t{ i: \"2\", x: 1, y: 0, w: 1, h: 1 },\n\t\t{ i: \"3\", x: 2, y: 1, w: 1, h: 2 },\n\t\t{ i: \"4\", x: 0, y: 1, w: 2, h: 1 },\n\t\t{ i: \"5\", x: 0, y: 2, w: 1, h: 1 },\n\t\t{ i: \"6\", x: 1, y: 2, w: 2, h: 1 },\n\t]);\n\tconst [newCounter, setNewCounter] = useState(0);\n\tconst [imageNumber, setImageNumber] = useState(6);\n\tconst [cols, setCols] = useState(3);\n\tconst [gridWidthPercentage, setGridWidthPercentage] = useState(100);\n\tconst [imageHeight, setImageHeight] = useState(150);\n\n\tconst [alertMessage, setAlertMessage] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tconst newLayout = [...layout];\n\t\tnewLayout.forEach((item) => {\n\t\t\t/* if (item.x >= cols) {\n\t\t\t\titem.x = cols - 1;\n\t\t\t} */\n\t\t\tif (item.x + item.w > cols) {\n\t\t\t\titem.x -= 1;\n\t\t\t\titem.y += 1;\n\t\t\t}\n\t\t});\n\t\tsetLayout(newLayout);\n\t}, [cols]);\n\n\tconst handleLayoutChange = (currentLayout) => {\n\t\tsetLayout(currentLayout);\n\t};\n\n\tconst addItem = () => {\n\t\tconst newItem = {\n\t\t\ti: \"n\" + newCounter,\n\t\t\tx: (layout.length * 2) % cols,\n\t\t\ty: Math.max.apply(\n\t\t\t\tMath,\n\t\t\t\tlayout.map((o) => o.y)\n\t\t\t),\n\t\t\tw: 1,\n\t\t\th: 1,\n\t\t};\n\t\tconst newLayout = [...layout];\n\t\tnewLayout.push(newItem);\n\t\tsetLayout(newLayout);\n\t\tsetNewCounter((prev) => prev + 1);\n\t};\n\n\tconst removeItem = (i) => {\n\t\tconst itemIndexToRemove = layout.findIndex((item) => item.i == i);\n\t\tlet newLayout = [...layout];\n\t\tnewLayout.splice(itemIndexToRemove, 1);\n\t\tsetLayout(newLayout);\n\t};\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Appbar />\n\t\t\t<main style={containerStyle}>\n\t\t\t\t<GalleryGrid\n\t\t\t\t\tlayout={layout}\n\t\t\t\t\timageNumber={imageNumber}\n\t\t\t\t\tcols={cols}\n\t\t\t\t\tgridWidthPercentage={gridWidthPercentage}\n\t\t\t\t\timageHeight={imageHeight}\n\t\t\t\t\tonLayoutChange={handleLayoutChange}\n\t\t\t\t\tremoveItem={removeItem}\n\t\t\t\t/>\n\t\t\t\t<GridForm\n\t\t\t\t\tlayout={layout}\n\t\t\t\t\timageNumber={imageNumber}\n\t\t\t\t\tcols={cols}\n\t\t\t\t\tgridWidthPercentage={gridWidthPercentage}\n\t\t\t\t\timageHeight={imageHeight}\n\t\t\t\t\tonAddImage={addItem}\n\t\t\t\t\tonChangeCols={(newCols) => setCols(newCols)}\n\t\t\t\t\tonChangeGridWidth={(newGridWidth) => {\n\t\t\t\t\t\tif (newGridWidth < 1) newGridWidth = 1;\n\t\t\t\t\t\telse if (newGridWidth > 100) newGridWidth = 100;\n\t\t\t\t\t\tsetGridWidthPercentage(newGridWidth);\n\t\t\t\t\t}}\n\t\t\t\t\tonChangeImageHeight={(newHeight) => {\n\t\t\t\t\t\tif (newHeight < 50) newHeight = 50;\n\t\t\t\t\t\tsetImageHeight(newHeight);\n\t\t\t\t\t}}\n\t\t\t\t\tonCopyText={(msg) => {\n\t\t\t\t\t\tsetAlertMessage(msg);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Alert message={alertMessage} duration={2500} />\n\t\t\t</main>\n\t\t</Wrapper>\n\t);\n}\n\nconst Wrapper = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: 1fr;\n\theight: 100vh;\n\twidth: 100%;\n\toverflow: hidden;\n`;\n\nconst containerStyle = {\n\tdisplay: \"grid\",\n\tgridTemplateColumns: \"2fr 1fr\",\n\tgridGap: \"40px\",\n\tgridAutoRows: \"100%\",\n\tjustifyContent: \"center\",\n\twidth: \"100%\",\n\tpadding: \"10px 40px 20px\",\n\toverflow: \"hidden\",\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}